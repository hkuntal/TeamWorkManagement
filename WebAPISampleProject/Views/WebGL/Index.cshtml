@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Content/StyleSheet1.css" rel="stylesheet" />
<script src="~/Scripts/WebGL/WebGL.js"></script>
    <script id="vertex" type="x-shader">
        
        attribute vec2 aVertexPosition;
        void main()
        {
        gl_Position = vec4(aVertexPosition, 0.0, 1.0);
        }

    </script>  
    <script id="fragment" type="x-shader"></script> 
        #ifdef GL_ES
    precision highp float;
    #endif
                           
    uniform vec4 uColor;
                           
    void main() {
            gl_FragColor = uColor;
    }       
    <script type="text/javascript">
    function init() {
        var canvas = document.getElementById("mycanvas");
        var gl = canvas.getContext("experimental-webgl");
        gl.viewport(0, 0, canvas.width, canvas.height);
        gl.clearColor(0, 0.8, 1, 1);
        gl.clear(gl.COLOR_BUFFER_BIT);
        
        var v = document.getElementById("vertex").firstChild.nodeValue;
        var f = document.getElementById("fragment").firstChild.nodeValue;

        var vs = gl.createShader(gl.VERTEX_SHADER);
        gl.shaderSource(vs, v);
        gl.compileShader(vs);

        var fs = gl.createShader(gl.FRAGMENT_SHADER);
        gl.shaderSource(fs, f);
        gl.compileShader(fs);

        program = gl.createProgram();
        gl.attachShader(program, vs);
        gl.attachShader(program, fs);
        gl.linkProgram(program);
        

        if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))
            console.log(gl.getShaderInfoLog(vs));

        if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))
            console.log(gl.getShaderInfoLog(fs));

        if (!gl.getProgramParameter(program, gl.LINK_STATUS))
            console.log(gl.getProgramInfoLog(program));
        
        gl.useProgram(program);

        program.uColor = gl.getUniformLocation(program, "uColor");
        gl.uniform4fv(program.uColor, [0.0, 0.3, 0.0, 1.0]);

        program.aVertexPosition = gl.getAttribLocation(program, "aVertexPosition");
        gl.enableVertexAttribArray(program.aVertexPosition);
        gl.vertexAttribPointer(program.aVertexPosition, itemSize, gl.FLOAT, false, 0, 0);
        
        gl.drawArrays(gl.TRIANGLES, 0, numItems);
    }
</script>
</head>
    <body onload="init()">
        <h2>This is all about WebGL</h2>
        <canvas id="mycanvas" width="800" height="500"></canvas>
    </body>
</html>




